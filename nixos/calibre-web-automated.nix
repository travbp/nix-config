# Auto-generated using compose2nix v0.3.2-pre.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."calibre-web-automated" = {
    image = "crocodilestick/calibre-web-automated:latest";
    environment = {
      "PGID" = "1000";
      "PUID" = "1000";
      "TZ" = "UTC";
    };
    volumes = [
      "/persist/calibre-web-automated/config:/config:rw"
      "/persist/calibre-web-automated/cwa-book-ingest:/cwa-book-ingest:rw"
      "/persist/calibre-web-automated/library:/calibre-library:rw"
    ];
    ports = [
      "8083:8083/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=calibre-web-automated"
      "--network=calibre-web-automated_default"
    ];
  };
  systemd.services."docker-calibre-web-automated" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-calibre-web-automated_default.service"
    ];
    requires = [
      "docker-network-calibre-web-automated_default.service"
    ];
    partOf = [
      "docker-compose-calibre-web-automated-root.target"
    ];
    wantedBy = [
      "docker-compose-calibre-web-automated-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-calibre-web-automated_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f calibre-web-automated_default";
    };
    script = ''
      docker network inspect calibre-web-automated_default || docker network create calibre-web-automated_default
    '';
    partOf = [ "docker-compose-calibre-web-automated-root.target" ];
    wantedBy = [ "docker-compose-calibre-web-automated-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-calibre-web-automated-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
